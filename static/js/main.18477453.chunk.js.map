{"version":3,"sources":["components/api/index.js","components/barchart/index.jsx","components/card/index.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","url","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","display","position","title","text","HorizontalBarChart","props","className","style","data","labels","olabels","slice","datasets","label","ovalues","backgroundColor","Card","src","UrlImages","alpha2Code","toLowerCase","alt","id","name","capital","region","languages","currencies","value","population","displayType","thousandSeparator","area","href","target","rel","App","state","directionalSort","sortType","setState","countriesJSON","filteredCountry","filteredRegion","handleChange","bind","a","get","then","response","auxRespuesta","event","this","sorted","sort","b","sortedJSON","uniqueRegions","Set","map","uniqueRegionsList","forEach","d","push","sorted2","filter","countries","includes","auxCountries","auxPopulation","element","key","console","log","htmlFor","onChange","opt","type","placeholder","disabled","onClick","countryJSON","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18477453.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = 'https://restcountries.eu/'\r\nconst endpoint = 'rest/v2/all'\r\n\r\nexport const api = axios.create({\r\n    baseURL: url + endpoint\r\n});\r\n\r\nexport default api;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './index.css'\r\n\r\n\r\nconst options = {\r\n  indexAxis: 'y',\r\n  elements: {\r\n    bar: {\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n      position: 'top',\r\n    }, title: {\r\n      display: true,\r\n      text: 'Top 5 countries with the most population'\r\n    },\r\n  }\r\n};\r\n\r\nconst HorizontalBarChart = (props) => (\r\n  <div className=\"o-cotainer-chart\" style={{  }}>\r\n    <Bar\r\n      data={{\r\n        labels: props.olabels.slice(0, 5),\r\n        datasets: [\r\n          {\r\n            label: 'population',\r\n            data: props.ovalues.slice(0, 5),\r\n            backgroundColor: [\r\n              '#ff6384',\r\n              '#36a2eb',\r\n              '#cc65fe',\r\n              '#ffce56'\r\n            ]\r\n          },\r\n        ],\r\n      }}\r\n      options={options} />\r\n  </div>\r\n);\r\n\r\nexport default HorizontalBarChart;","import React from 'react';\r\nimport NumberFormat from \"react-number-format\";\r\nimport './index.css'\r\n\r\nconst Card = (props) =>{\r\n    return(\r\n        <div className=\"o-card\">\r\n                <div className='o-flag-container'>\r\n                  <img className='o-flag-img' src={props.UrlImages + props.data.alpha2Code.toLowerCase() + '.png'} alt={props.UrlImages + props.data.alpha2Code.toLowerCase()} />\r\n                </div>\r\n\r\n                <h2 id=\"o-country\">\r\n                  {props.data.name}\r\n                </h2>\r\n                <h4 id=\"o-capital\">\r\n                  Capital: {props.data.capital}\r\n                </h4>\r\n                <p>\r\n                  Region: {props.data.region}\r\n                  <br />\r\n                  Language: {props.data.languages[0].name}\r\n                  <br />\r\n                  Currency: {props.data.currencies[0].name}\r\n                  <br />\r\n                  Population: <NumberFormat value={props.data.population} displayType={'text'} thousandSeparator={true} />\r\n                  <br />\r\n                  Area: <NumberFormat value={props.data.area} displayType={'text'} thousandSeparator={true} /> Km<sup>2</sup>\r\n                </p>\r\n                <h5>\r\n                  <a href={\"https://es.wikipedia.org/wiki/\" + props.data.name} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    View more details\r\n                  </a>\r\n                </h5>\r\n              </div>\r\n    )\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport api from './components/api';\r\nimport BarChart from './components/barchart'\r\nimport Card from './components/card'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countriesJSON: [],\r\n      sortType: 'desc',\r\n      UrlImages: 'https://flagpedia.net/data/flags/normal/',\r\n      filteredCountry: '',\r\n      filteredRegion: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await api.get()\r\n      .then(\r\n        response => {\r\n          var auxRespuesta = response.data;\r\n\r\n          this.setState({\r\n            countriesJSON: auxRespuesta,\r\n          })\r\n        }\r\n      );\r\n  }\r\n\r\n  directionalSort = sortType => {\r\n    this.setState({ sortType })\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { countriesJSON, sortType, UrlImages, filteredCountry, filteredRegion } = this.state;\r\n\r\n    //Sort data by population values\r\n    const sorted = countriesJSON.sort(function (a, b) {\r\n      const sortedJSON = (sortType === 'asc') ? 1 : -1;\r\n      return (a.population - b.population) * sortedJSON;\r\n    });\r\n\r\n    //Get unique values in JSON sorted\r\n    const uniqueRegions = new Set(countriesJSON.map(\r\n      (a) => {\r\n        return a.region\r\n      }\r\n    ))\r\n\r\n    var uniqueRegionsList = [];\r\n    uniqueRegions.forEach(d => uniqueRegionsList.push(d))\r\n    ///////\r\n\r\n    //Filter data by population and region\r\n    const auxSorted = sorted.filter(\r\n      (countries) => countries.name.toLowerCase().includes(filteredCountry.toLowerCase()));\r\n\r\n\r\n    const sorted2 = auxSorted.filter(\r\n      (countries) => countries.region.toLowerCase().includes(filteredRegion.toLowerCase()));\r\n\r\n    //Get values for visualization\r\n    var auxCountries = [];\r\n    var auxPopulation = [];\r\n\r\n    sorted2.map((element, key) => {\r\n      auxCountries.push(element.name);\r\n      auxPopulation.push(element.population);\r\n      return (\r\n        console.log(\"Sorted\")\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"o-app-container\">\r\n        <h1>\r\n          COUNTRIES\r\n        </h1>\r\n        <form>\r\n          <label htmlFor=\"\">Region: </label>\r\n          <br />\r\n          <br />\r\n          <select name='filteredRegion' onChange={this.handleChange} value={filteredRegion}>\r\n            {uniqueRegionsList.map(\r\n              (opt) => {\r\n                return (\r\n                  <option>{opt}</option>\r\n                )\r\n              }\r\n            )}\r\n          </select>\r\n          <br />\r\n          <br />\r\n\r\n          <label>Do you want to search for a country? </label>\r\n          <br />\r\n          <br />\r\n          <input name='filteredCountry' type=\"text\" value={filteredCountry} onChange={this.handleChange} placeholder='e.g. Colombia' />\r\n        </form>\r\n        <br />\r\n\r\n        <div className='o-container-buttons'>\r\n          <button className='o-button' disabled={(sortType === 'asc') ? true : false} onClick={() => this.directionalSort('asc')}>Sort by asc</button>\r\n          <button className='o-button' disabled={(sortType === 'desc') ? true : false} onClick={() => this.directionalSort('desc')}>Sort by desc</button>\r\n        </div>\r\n        <br />\r\n\r\n        <BarChart olabels={auxCountries} ovalues={auxPopulation} />\r\n        <br />\r\n        <br />\r\n\r\n        <div className='row'>\r\n\r\n          {sorted2.map(\r\n            (countryJSON, key) => (\r\n              <Card data={countryJSON} UrlImages={UrlImages} key={key} />\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}